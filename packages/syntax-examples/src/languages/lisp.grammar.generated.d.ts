// This file was generated by syntax-codegen. Do not edit!
/* eslint-disable */
import type { AstNode, SyntaxParser, Token } from "@timkendrick/syntax";
declare module "@timkendrick/syntax" {
  export function syntax(source: "\n  OPEN_PAREN ::= \"(\"\n  CLOSE_PAREN ::= \")\"\n  WHITESPACE ::= /[ \\t]+/\n  NEWLINE ::= /\\n+/\n  STRING ::= /\"(?:[^\"\\\\\\n]|\\\\.)*\"/\n  NAME ::= /[^()\" \\t\\n]+/\n\n  <Program> ::= {\n    : <optional_whitespace>,\n    statements: <statement_list>,\n    : <optional_whitespace>\n  }\n  <List> ::= {\n    : OPEN_PAREN <optional_whitespace> | OPEN_PAREN,\n    items: <expression_list>,\n    : <optional_whitespace> CLOSE_PAREN | CLOSE_PAREN\n  }\n  <Symbol> ::= {\n    value: <- NAME\n  }\n  <StringLiteral> ::= {\n    source: <- STRING\n  }\n  <expression> ::= <Symbol> | <List> | <StringLiteral>\n  <expression_list> ::= [<expression>, <whitespace>]\n  <statement_list> ::= [<expression>, <statement_separator>]\n  <statement_separator> ::= <optional_padding> NEWLINE <optional_whitespace>\n  <optional_padding> ::= WHITESPACE | \"\"\n  <whitespace> ::= WHITESPACE <optional_whitespace> | NEWLINE <optional_whitespace>\n  <optional_whitespace> ::= <whitespace> | \"\"\n"): SyntaxParser<CustomSyntax_4c9572ea_TokenType, CustomSyntax_4c9572ea_Node, CustomSyntax_4c9572ea_Root>;
  type CustomSyntax_4c9572ea_TokenType = CustomSyntax_4c9572ea_TokenType_OPEN_PAREN | CustomSyntax_4c9572ea_TokenType_CLOSE_PAREN | CustomSyntax_4c9572ea_TokenType_WHITESPACE | CustomSyntax_4c9572ea_TokenType_NEWLINE | CustomSyntax_4c9572ea_TokenType_STRING | CustomSyntax_4c9572ea_TokenType_NAME;
  type CustomSyntax_4c9572ea_TokenType_OPEN_PAREN = "OPEN_PAREN";
  type CustomSyntax_4c9572ea_TokenType_CLOSE_PAREN = "CLOSE_PAREN";
  type CustomSyntax_4c9572ea_TokenType_WHITESPACE = "WHITESPACE";
  type CustomSyntax_4c9572ea_TokenType_NEWLINE = "NEWLINE";
  type CustomSyntax_4c9572ea_TokenType_STRING = "STRING";
  type CustomSyntax_4c9572ea_TokenType_NAME = "NAME";
  type CustomSyntax_4c9572ea_NodeType = CustomSyntax_4c9572ea_NodeType_Program | CustomSyntax_4c9572ea_NodeType_List | CustomSyntax_4c9572ea_NodeType_Symbol | CustomSyntax_4c9572ea_NodeType_StringLiteral;
  type CustomSyntax_4c9572ea_NodeType_Program = "Program";
  type CustomSyntax_4c9572ea_NodeType_List = "List";
  type CustomSyntax_4c9572ea_NodeType_Symbol = "Symbol";
  type CustomSyntax_4c9572ea_NodeType_StringLiteral = "StringLiteral";
  type CustomSyntax_4c9572ea_Node = CustomSyntax_4c9572ea_ProgramNode | CustomSyntax_4c9572ea_ListNode | CustomSyntax_4c9572ea_SymbolNode | CustomSyntax_4c9572ea_StringLiteralNode;
  type CustomSyntax_4c9572ea_Root = CustomSyntax_4c9572ea_ProgramNode;
  type CustomSyntax_4c9572ea_ProgramNode = AstNode<CustomSyntax_4c9572ea_NodeType_Program, CustomSyntax_4c9572ea_ProgramNodeProperties>;
  interface CustomSyntax_4c9572ea_ProgramNodeProperties {
    statements: CustomSyntax_4c9572ea_Pattern_statement_list;
  }
  type CustomSyntax_4c9572ea_ListNode = AstNode<CustomSyntax_4c9572ea_NodeType_List, CustomSyntax_4c9572ea_ListNodeProperties>;
  interface CustomSyntax_4c9572ea_ListNodeProperties {
    items: CustomSyntax_4c9572ea_Pattern_expression_list;
  }
  type CustomSyntax_4c9572ea_SymbolNode = AstNode<CustomSyntax_4c9572ea_NodeType_Symbol, CustomSyntax_4c9572ea_SymbolNodeProperties>;
  interface CustomSyntax_4c9572ea_SymbolNodeProperties {
    value: string;
  }
  type CustomSyntax_4c9572ea_StringLiteralNode = AstNode<CustomSyntax_4c9572ea_NodeType_StringLiteral, CustomSyntax_4c9572ea_StringLiteralNodeProperties>;
  interface CustomSyntax_4c9572ea_StringLiteralNodeProperties {
    source: string;
  }
  type CustomSyntax_4c9572ea_Pattern_expression = CustomSyntax_4c9572ea_SymbolNode | CustomSyntax_4c9572ea_ListNode | CustomSyntax_4c9572ea_StringLiteralNode;
  type CustomSyntax_4c9572ea_Pattern_expression_list = Array<CustomSyntax_4c9572ea_Pattern_expression>;
  type CustomSyntax_4c9572ea_Pattern_statement_list = Array<CustomSyntax_4c9572ea_Pattern_expression>;
  type CustomSyntax_4c9572ea_Pattern_statement_separator = [CustomSyntax_4c9572ea_Pattern_optional_padding, Token<CustomSyntax_4c9572ea_TokenType_NEWLINE>, CustomSyntax_4c9572ea_Pattern_optional_whitespace];
  type CustomSyntax_4c9572ea_Pattern_optional_padding = Token<CustomSyntax_4c9572ea_TokenType_WHITESPACE> | null;
  type CustomSyntax_4c9572ea_Pattern_whitespace = [Token<CustomSyntax_4c9572ea_TokenType_WHITESPACE>, CustomSyntax_4c9572ea_Pattern_optional_whitespace] | [Token<CustomSyntax_4c9572ea_TokenType_NEWLINE>, CustomSyntax_4c9572ea_Pattern_optional_whitespace];
  type CustomSyntax_4c9572ea_Pattern_optional_whitespace = CustomSyntax_4c9572ea_Pattern_whitespace | null;
}